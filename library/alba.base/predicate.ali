{: Copyright (C) Helmut Brandl  <helmut dot brandl at gmx dot net>

   This file is distributed under the terms of the GNU General Public License
   version 2 (GPLv2) as published by the Free Software Foundation. :}


use any end

G: ANY

immutable class PREDICATE[G] end

(in)  (a:G, p:G?): BOOLEAN
        -- Is 'a' an element of the set 'p'?
        --     Note: The expressions 'a in p' and 'p(a)' are equivalent

(/in) (a:G, p:G?): BOOLEAN
        -- Is 'a' not an element of the set 'p'?
    -> not p(a)

(<=) (p,q:G?): ghost BOOLEAN
        -- Is 'p' a subset of 'q'?
    -> all(x) p(x) ==> q(x)

(=)  (p,q:G?): ghost BOOLEAN
        -- Are 'p' and 'q' equal sets?
    -> p <= q and q <= p


all(a,b:G, p:G?)
    ensure
        p = p                        -- reflexivity
        a = b  ==>  p(a)  ==>  p(b)  -- leibniz rule
    end


immutable class
    PREDICATE[G]
inherit
    ghost ANY
end



0: G? = {x: false}
        -- The empty set

1: G? = {x: true}
        -- The universal set

(+)  (p,q:G?): G?
        -- The union of the sets 'p' and 'q'
    -> {x: p(x) or q(x)}

(*)  (p,q:G?): G?
        -- The intersection of the sets 'p' and 'q'
    -> {x: p(x) and q(x)}

(-)  (p,q:G?): G?
        -- The set 'p' without the elements of the set 'q'
    -> {x: p(x) and not q(x)}

(-)  (p:G?): G?
        -- The complement of the set 'p'
    -> {x: not p(x)}

(+)  (pp:G??): ghost G?
        -- The union of all sets in the collection of sets 'pp'
    -> {x: some(p) p(x) and pp(p)}

(*)  (pp:G??): ghost G?
        -- The intersection of all sets in the collection of sets 'pp'
    -> {x: all(p) pp(p) ==> p(x)}

singleton (a:G): G?
        -- The singleton set containing only the element 'a'
        --    Note: '{a}' is an abbreviation for 'a.singleton' or 'singleton(a)'
        --          '{a,b,...}' is an abbreviation for '{a} + {b} + ...'
    -> {x: x = a}

