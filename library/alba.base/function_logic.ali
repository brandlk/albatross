use
    function
end

A: ANY
B: ANY

{: Order Structure
   =============== :}

all(f,g,h:A->B)
    ensure
         f <= f
         f <= g  ==>  g <= f  ==> f = g
         f <= g  ==>  g <= h  ==> f <= h
    end




{: Override
   ======== :}


all(f:A->B, a,x:A, b:B)
    ensure
        (f + (a,b))(a) = b
        x in f.domain ==> x /= a ==> (f + (a,b))(x) = f(x)
    end


{: Consistency of Functions
   ======================== :}


all(f,g:A->B)
    ensure
        f <= f + g
        consistent(f,g) ==> consistent(g,f)
        consistent(f,g) ==> g <= f + g
        consistent(f,g) ==> some(h) f <= h and g <= h
        (some(h) f <= h and g <= h) ==> consistent(f,g)
    end
